library(readxl)
library(dplyr)
library(gt)
knitr::opts_chunk$set(echo = TRUE)
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
set.seed(123)
index <- sample(seq_len(nrow(insurance)), size = 3)
train <- insurance[-index,]
test <- insurance[index,]
summary(train)
summary(test)
cor(insurance)
model <- lm(Charges ~. , data = train)
summary(model)
model <- lm(Charges ~. , data = train)
summary(model)
par(mfrow=c(2,2))
plot(model)
model <- lm(Charges ~. , data = train)
summary(model)
par(mfrow=c(3,3))
plot(model)
model <- lm(Charges ~. , data = train)
summary(model)
par(mfrow=c(1,1))
plot(model)
model <- lm(Charges ~. , data = train)
summary(model)
par(mfrow=c(2,2))
plot(model)
library(readxl)
library(dplyr)
library(gt)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
gt(head(insurance))
set.seed(123)
index <- sample(seq_len(nrow(insurance)), size = 3)
train <- insurance[-index,]
test <- insurance[index,]
summary(train)
train %>%
tbl_summary(statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}"),
all_categorical() ~ "{n} / {N} ({p}%)"),
type = all_continuous() ~ "continuous2")
cor(insurance)
model <- lm(Charges ~. , data = train)
summary(model)
par(mfrow=c(2,2))
plot(model)
model <- lm(Charges ~. , data = train)
summary(model)
model <- ln(Charges ~. , data = train)
model <- lm(Charges ~. , data = train)
summary(model)
set.seed(123)
index <- sample(seq_len(nrow(insurance)), size = 3)
train <- insurance[-index,]
test <- insurance[index,]
summary(train)
train %>%
tbl_summary(statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}"),
all_categorical() ~ "{n} / {N} ({p}%)"),
type = all_continuous() ~ "continuous2")
library(readxl)
library(dplyr)
library(gt)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
gt(head(insurance))
set.seed(123)
index <- sample(seq_len(nrow(insurance)), size = 3)
train <- insurance[-index,]
test <- insurance[index,]
summary(train)
train %>%
tbl_summary(statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}"),
all_categorical() ~ "{n} / {N} ({p}%)"),
type = all_continuous() ~ "continuous2")
cor(insurance)
model <- lm(Charges ~. , data = train)
summary(model)
par(mfrow=c(2,2))
plot(model)
model <- lm(Charges ~. , data = train)
summary(model)
par(mfrow=c(2,2))
plot(model)
View(train)
trainln <- log(train)
View(trainln)
View(trainln)
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
par(mfrow=c(1,2))
hist(trainln)
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
par(mfrow=c(1,2))
hist(trainln$Charges)
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
model <- lm(Charges ~. , data = trainln)
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
model <- lm(Charges ~. , data = trainln)
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
model <- lm(Charges ~. , data = trainln)
summary(model)
par(mfrow=c(2,2))
plot(model)
cor(trainln)
View(test)
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
model2 <- lm(Charges ~. , data = trainln)
summary(model)
par(mfrow=c(2,2))
plot(model)
cor(trainln)
model <- lm(Charges ~. , data = train)
summary(model)
par(mfrow=c(2,2))
plot(model)
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$bad_model_pred <- predict(model, newdata = test)
test$model_1_pred <- predict(model2, newdata = test) %>% exp()
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$bad_model_pred <- predict(model, newdata = test)
test$model_1_pred <- predict(model2, newdata = test) %>% exp()
test$error_bm <- test$bad_model_pred - test$Charges
test$error_1 <- test$model_1_pred - test$Charges
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$bad_model_pred <- predict(model, newdata = test)
test$model_1_pred <- predict(model2, newdata = test) %>% exp()
test$error_bm <- test$bad_model_pred - test$Charges
test$error_1 <- test$model_1_pred - test$Charges
# Bad Model
mean(test$error_bm)
# Model 1
mean(test$error_1)
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$bad_model_pred <- predict(model, newdata = test)
test$model_1_pred <- predict(model2, newdata = test) %>% exp()
test$error_bm <- test$bad_model_pred - test$Charges
test$error_1 <- test$model_1_pred - test$Charges
# Bad Model
mean(test$error_bm)
# Model 1
mean(test$error_1)
# MAE
mae <- function(error_vector){
error_vector %>%
abs() %>%
mean()
}
# Bad Model
mae(test$error_bm)
# Model 1
mae(test$error_1)
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$bad_model_pred <- predict(model, newdata = test)
test$model_1_pred <- predict(model2, newdata = test) %>% exp()
test$error_bm <- test$bad_model_pred - test$Charges
test$error_1 <- test$model_1_pred - test$Charges
# Bad Model
mean(test$error_bm)
# Model 1
mean(test$error_1)
# MAE
mae <- function(error_vector){
error_vector %>%
abs() %>%
mean()
}
# Bad Model
mae(test$error_bm)
# Model 1
mae(test$error_1)
rmse <- function(error_vector){
error_vector^2 %>%
mean() %>%
sqrt()
}
# Bad Model
rmse(test$error_bm)
# Model 1
rmse(test$error_1)
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$bad_model_pred <- predict(model, newdata = test)
test$model_1_pred <- predict(model2, newdata = test) %>% exp()
test$error_bm <- test$bad_model_pred - test$Charges
test$error_1 <- test$model_1_pred - test$Charges
# Bad Model
mean(test$error_bm)
# Model 1
mean(test$error_1)
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$bad_model_pred <- predict(model, newdata = test)
test$model_1_pred <- predict(model2, newdata = test) %>% exp()
test$error_bm <- test$bad_model_pred - test$Charges
test$error_1 <- test$model_1_pred - test$Charges
# Bad Model
mean(test$error_bm)
# Model 1
mean(test$error_1)
library(readxl)
library(dplyr)
library(gt)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
model2 <- lm(Charges ~. , data = trainln)
summary(model2)
par(mfrow=c(2,2))
plot(model)
trainquad <- trainln^2
trainquad <- do.call(data.frame, lapply(trainquad, function(x) replace (x, is.infinite(x), 1)))
model3 <- lm(Charges ~. , data = trainquad)
summary(model3)
par(mfrow=c(2,2))
plot(model)
View(trainquad)
View(trainquad)
trainquad <- trainln^2
trainquad <- do.call(data.frame, lapply(trainquad, function(x) replace (x, is.infinite(x), 1)))
model3 <- lm(Charges ~. , data = trainquad)
summary(model3)
par(mfrow=c(2,2))
plot(model3)
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
model2 <- lm(Charges ~. , data = trainln)
summary(model2)
par(mfrow=c(2,2))
plot(model2)
trainln <- log(train)
trainln <- do.call(data.frame, lapply(trainln, function(x) replace (x, is.infinite(x), 1)))
model2 <- lm(Charges ~. , data = trainln)
summary(model2)
par(mfrow=c(2,2))
plot(model2)
cor(trainln)
cor(trainquad)
test$Charges <- log(test$Charges)
test$Age <- log(test$Age)
test$BMI <- log(test$BMI)
test$bad_model_pred <- predict(model, newdata = test)
test$model_1_pred <- predict(model2, newdata = test) %>% exp()
test$model_2_pred <- predict(model3,newdata = test) %>% exp()
test$error_bm <- test$bad_model_pred - test$Charges
test$error_1 <- test$model_1_pred - test$Charges
test$error_2 <- test$model_2_pred - test$Charges
# Bad Model
mean(test$error_bm)
# Model 1
mean(test$error_1)
# Model 2
mean(test$error_2)
library(readxl)
library(dplyr)
library(gt)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
library(readxl)
library(dplyr)
library(gt)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
library(readxl)
library(dplyr)
library(gt)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
library(readxl)
library(dplyr)
library(gt)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
insurance <- read.csv("../Data/insurance_0126_Group6.csv")
mae <- function(error_vector){
error_vector %>%
abs() %>%
mean()
}
# Bad Model
mae(test$error_bm)
# Model 1
mae(test$error_1)
# Model 2
mae(test$error_2)
rmse <- function(error_vector){
error_vector^2 %>%
mean() %>%
sqrt()
}
# Bad Model
rmse(test$error_bm)
# Model 1
rmse(test$error_1)
# Model 2
rmse(test$error_2)
mape <- function(error_vector, actual_vector){
(error_vector/actual_vector) %>%
abs() %>%
mean()
}
# Bad Model
mape(test$error_bm, test$Charges)
# Model 1
mape(test$error_1, test$Charges)
# Model 2
mape(test$error_2, test$Charges)
